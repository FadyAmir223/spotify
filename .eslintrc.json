{
  "extends": [
    "airbnb-base",
    "next/core-web-vitals",
    "plugin:prettier/recommended"
  ],
  "rules": {
    // Avoid conflict rule between Prettier and Airbnb Eslint
    "prettier/prettier": ["error", { "singleQuote": true, "endOfLine": "auto" }]
  },
  "overrides": [
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "plugins": [
        "@typescript-eslint",
        "unused-imports",
        "tailwindcss",
        "simple-import-sort"
      ],
      "extends": [
        "plugin:tailwindcss/recommended",
        "airbnb",
        "airbnb-typescript",
        "next/core-web-vitals",
        "plugin:prettier/recommended"
      ],
      "parserOptions": {
        "project": "./tsconfig.json"
      },
      "rules": {
        // Avoid conflict rule between Prettier and Airbnb Eslint
        "prettier/prettier": [
          "error",
          { "singleQuote": true, "endOfLine": "auto" }
        ],

        // Overrides Airbnb configuration and enable no-restricted-syntax
        "no-restricted-syntax": [
          "error",
          "ForInStatement",
          "LabeledStatement",
          "WithStatement"
        ],

        // Disable Airbnb's specific function type
        "react/function-component-definition": "off",

        // Avoid missing file extension errors, TypeScript already provides a similar feature
        "import/extensions": "off",

        // Vscode doesn't support automatically destructuring, it's a pain to add a new variable
        "react/destructuring-assignment": "off",

        // Allow non-defined react props as undefined
        "react/require-default-props": "off",

        // for react-hook-form
        "react/jsx-props-no-spreading": "off",

        // Avoid conflict rule between Eslint and Prettier
        "@typescript-eslint/comma-dangle": "off",

        // Ensure `import type` is used when it's necessary
        "@typescript-eslint/consistent-type-imports": "error",

        // forbid using `any` type
        "@typescript-eslint/no-explicit-any": "error",

        // Named export is easier to refactor automatically
        "import/prefer-default-export": "off",

        // Import configuration for `eslint-plugin-simple-import-sort`
        "simple-import-sort/imports": "error",

        // Export configuration for `eslint-plugin-simple-import-sort`
        "simple-import-sort/exports": "error",

        // Avoid conflict rule between `eslint-plugin-import` and `eslint-plugin-simple-import-sort`
        "import/order": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": [
          "error",
          { "argsIgnorePattern": "^_" }
        ]
      }
    }
  ]
}
