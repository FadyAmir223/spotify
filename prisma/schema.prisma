generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  LISTENER
  ARTIST
}

model User {
  id            String      @id @default(cuid())
  name          String?
  email         String      @unique
  password      String?
  emailVerified DateTime?
  image         String?
  role          Role        @default(LISTENER)
  createdAt     DateTime    @default(now())
  accounts      Account[]
  songs         Song[]
  playlists     Playlist[]
  likedSongs    LikedSong[]
}

model Account {
  id                String  @id @default(cuid())
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  @@unique([provider, providerAccountId])
}

model VerificationOtp {
  id      String   @id @default(cuid())
  email   String
  otp     String   @unique
  expires DateTime

  @@unique([email, otp])
}

model ResetPasswordToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model Song {
  id        String   @id @default(cuid())
  title     String
  songPath  String
  imagePath String
  createdAt DateTime @default(now())

  artist   User   @relation(fields: [artistId], references: [id], onDelete: Cascade)
  artistId String

  playlists  Playlist[]
  likedSongs LikedSong[]

  @@unique([title, artistId])
}

model LikedSong {
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  song   Song   @relation(fields: [songId], references: [id], onDelete: Cascade)
  songId String

  createdAt DateTime @default(now())

  @@unique([userId, songId])
}

model Playlist {
  id        String  @id @default(cuid())
  title     String
  imagePath String?
  songs     Song[]

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, title])
}
